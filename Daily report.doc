DAY-1 (23/01/2025)
#Quadratic equation solution
#math library
#Random functions

DAY-2 (24/01/2025)
Functions
#Disassembly of code in the python compiler
#In the code we have to check for the input validity 


DAY-3 (25/01/2025)
#Git management
#Exam of 20 coding questions    

DAY-4 (27/01/2025)
#Fibonacci series
#Arrays and collections
#String manipulation
#Team formation team-5
#Mysql installation and use python (self learning)

DAY-5 (28/01/2025)
#Tuples-immutable
#OOPS 

DAY-6 (29/01/2025)
#Overloading-functions with multiple parameters or return type.
#Overriding-functions that are in classes and inherited from one to another and 
    the child class needs the functions in the parent class to behave differently.
#Static main is written in java to make the main functions stay in memory and not let
    the program be flushed by the garbage collector.
#Polymorphism
#storing the objects created in a list.
# *args - is used to send non key parameters.
# **kwargs are used to send key parameters.
#Destructor __del___
#Constructor overriding 
#Creating a dummy customer order listing class

DAY-7 (30/01/2025)
#classes
#modules
# packages are folders with multiple files and has a __init__.py in it 
    the package name must be all lowercase and can have _ in it.
    the package can be imported from <package_name> import * or specific data.  
#abstract class
#concrete class is the implementation of the abstract class.

DAY-8 (31/01/2025)
#Class benefits is the feature version something and  the object can use or call
    the functions in the parent class or the child class, think of it like a standard 
    template.
#Interface is a blue print of a class that once inherited must implement all the methods 
    inside the Interface.
#abstract class is the class blue print that may or may not have functionality inside the
    mehtods and need not be implemented in the inherited class.
